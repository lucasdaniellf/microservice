// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlatformApp.Repository;

#nullable disable

namespace PlatformApp.Migrations
{
    [DbContext(typeof(PlatformDbContext))]
    partial class PlatformDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlatformApp.Models.GameLibrary.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JogoId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("games");
                });

            modelBuilder.Entity("PlatformApp.Models.GameLibrary.PlatformGame", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformId")
                        .HasColumnType("integer");

                    b.Property<int>("GamePrice")
                        .HasColumnType("integer");

                    b.Property<int>("GameQtySold")
                        .HasColumnType("integer");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("platformGame");
                });

            modelBuilder.Entity("PlatformApp.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PlatformTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlatformTypeId");

                    b.ToTable("platforms");
                });

            modelBuilder.Entity("PlatformApp.Models.PlatformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("platformsType");
                });

            modelBuilder.Entity("PlatformApp.Models.GameLibrary.PlatformGame", b =>
                {
                    b.HasOne("PlatformApp.Models.GameLibrary.Game", "Game")
                        .WithMany("Platforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlatformApp.Models.Platform", "Platform")
                        .WithMany("Games")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("PlatformApp.Models.Platform", b =>
                {
                    b.HasOne("PlatformApp.Models.PlatformType", "platformType")
                        .WithMany("Platforms")
                        .HasForeignKey("PlatformTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("platformType");
                });

            modelBuilder.Entity("PlatformApp.Models.GameLibrary.Game", b =>
                {
                    b.Navigation("Platforms");
                });

            modelBuilder.Entity("PlatformApp.Models.Platform", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("PlatformApp.Models.PlatformType", b =>
                {
                    b.Navigation("Platforms");
                });
#pragma warning restore 612, 618
        }
    }
}
